<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.CustomerContext.Core" 
  namespace="Samsara.CustomerContext.Core.Entities">
  
  <class name="Customer" table="CustomerContext.Customers">

    <id name="CustomerId" type="int">
      <generator class="native"/>
    </id>

    <property name="Name"/>
    <property name="Description"/>

    <property name="UpdatedBy"/>
    <property name="CreatedBy"/>
    <property name="CreatedOn"/>
    <property name="UpdatedOn"/>
    <property name="Activated"/>
    <property name="Deleted"/>
    
    <many-to-one name="CustomerInfrastructure" 
                 class="Samsara.CustomerContext.Core.Entities.CustomerInfrastructure" 
                 column="CustomerInfrastructureId" not-null="true" cascade="all" unique="true" lazy="false" />

    <many-to-one name="BusinessType"
                 class="Samsara.CustomerContext.Core.Entities.BusinessType, Samsara.CustomerContext.Core"
                 column="BusinessTypeId"/>
    
  </class>

  <query name="Customer.GetByParameters">
    <![CDATA[
        from Customer where Deleted = 0 and Activated = 1
    ]]>
  </query>

  <query name="Customer.GetListByParameters">
    <![CDATA[
        from Customer where Deleted = 0 and Activated = 1
    ]]>
  </query>

  <sql-query name="Customer.SearchByParameters" cacheable="false" read-only="true">
    <return-scalar column="CustomerId" type="int"/>
    <return-scalar column="Name" type="string"/>
    <return-scalar column="BusinessTypeId" type="int"/>
    <![CDATA[
        SELECT c.CustomerId, c.Name, c.BusinessTypeId
        FROM CustomerContext.Customers c 
        WHERE c.Deleted = 0 AND c.Activated = 1
        AND c.Name LIKE :Name
    ]]>
  </sql-query>

</hibernate-mapping>