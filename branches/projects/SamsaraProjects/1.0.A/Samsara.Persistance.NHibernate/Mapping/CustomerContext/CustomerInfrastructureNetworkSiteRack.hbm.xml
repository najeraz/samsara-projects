<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.CustomerContext.Core" 
  namespace="Samsara.CustomerContext.Core.Entities">
  
  <class name="CustomerInfrastructureNetworkSiteRack" table="CustomerContext.CustomerInfrastructureNetworkSiteRacks">

    <id name="CustomerInfrastructureNetworkSiteRackId" type="int">
      <generator class="native"/>
    </id>

    <property name="Quantity"/>

    <property name="UpdatedBy"/>
    <property name="CreatedBy"/>
    <property name="CreatedOn"/>
    <property name="UpdatedOn"/>
    <property name="Activated"/>
    <property name="Deleted"/>

    <many-to-one name="CustomerInfrastructureNetworkSite"
                 class="Samsara.CustomerContext.Core.Entities.CustomerInfrastructureNetworkSite, Samsara.CustomerContext.Core"
                 column="CustomerInfrastructureNetworkSiteId"/>
    
    <many-to-one name="RackType"
                 class="Samsara.CustomerContext.Core.Entities.RackType, Samsara.CustomerContext.Core"
                 column="RackTypeId"/>
    
  </class>

  <query name="CustomerInfrastructureNetworkSiteRack.GetByParameters">
    <![CDATA[
        from CustomerInfrastructureNetworkSiteRack 
        where Deleted = 0 and Activated = 1
    ]]>
  </query>

  <query name="CustomerInfrastructureNetworkSiteRack.GetListByParameters">
    <![CDATA[
        from CustomerInfrastructureNetworkSiteRack
        where Deleted = 0 and Activated = 1
        and CustomerInfrastructureNetworkSiteId = :CustomerInfrastructureNetworkSiteId
    ]]>
  </query>

  <query name="CustomerInfrastructureNetworkSiteRack.SearchByParameters">
    <![CDATA[
        from CustomerInfrastructureNetworkSiteRack
        where Deleted = 0 and Activated = 1
        and CustomerInfrastructureNetworkSiteId = :CustomerInfrastructureNetworkSiteId
    ]]>
  </query>

</hibernate-mapping>