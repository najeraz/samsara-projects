<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.ProjectsAndTendering.Core" 
  namespace="Samsara.ProjectsAndTendering.Core.Entities.Domain">
  
  <class name="Opportunity" table="Opportunities">
    
    <id name="OpportunityId" type="int">
      <generator class="native"/>
    </id>
    
    <property name="AcquisitionReason"/>
    <property name="RegistrationDate"/>
    <property name="Name"/>
    <property name="ClarificationDate"/>
    <property name="PreRevisionDate"/>
    <property name="Deadline"/>
    <property name="Deleted"/>
    <property name="Activated"/>
    
    <many-to-one name="Organization"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Organization, Samsara.ProjectsAndTendering.Core"
                 column="OrganizationId"/>
    <many-to-one name="Bidder"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Bidder, Samsara.ProjectsAndTendering.Core"
                 column="BidderId"/>
    <many-to-one name="Dependency"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Dependency, Samsara.ProjectsAndTendering.Core"
                 column="DependencyId"/>
    <many-to-one name="EndUser"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.EndUser, Samsara.ProjectsAndTendering.Core"
                 column="EndUserId"/>
    <many-to-one name="Asesor"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Asesor, Samsara.ProjectsAndTendering.Core"
                 column="AsesorId"/>
    <many-to-one name="OpportunityStatus"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.OpportunityStatus, Samsara.ProjectsAndTendering.Core"
                 column="OpportunityStatusId"/>
  </class>

  <query name="Opportunity.GetListByParameters">
    <![CDATA[
        from Opportunity where Deleted = 0 and Activated = 1
    ]]>
  </query>

  <sql-query name="Opportunity.SearchByParameters" cacheable="false" read-only="true">
    <return-scalar column="OpportunityId" type="int"/>
    <return-scalar column="RegistrationDate" type="DateTime"/>
    <return-scalar column="OrganizationName" type="string"/>
    <return-scalar column="OpportunityName" type="string"/>
    <return-scalar column="AsesorName" type="string"/>
    <return-scalar column="PreRevisionDate" type="DateTime"/>
    <return-scalar column="Deadline" type="DateTime"/>
    <return-scalar column="OpportunityStatusName" type="string"/>
    <![CDATA[
      SELECT o.OpportunityId, o.RegistrationDate, o.Name OrganizationName, o.Name OpportunityName,
      a.Name AsesorName, o.PreRevisionDate, o.Deadline, ts.Name OpportunityStatusName
      FROM Opportunities o
      INNER JOIN Organizations o	  	  ON o.OrganizationId = o.OrganizationId AND o.Deleted = 0 and o.Activated = 1
      LEFT JOIN	Asesors a		    	      ON a.AsesorId = o.AsesorId AND a.Deleted = 0 and a.Activated = 1
      LEFT JOIN	OpportunityStatuses ts	ON ts.OpportunityStatusId = o.OpportunityStatusId AND ts.Deleted = 0 and ts.Activated = 1
      WHERE o.Deleted = 0 and o.Activated = 1
      AND o.Name like :OpportunityName
      AND (o.AsesorId = :AsesorId OR :AsesorId = -1)
      AND (o.OrganizationId = :OrganizationId OR :OrganizationId = -1)
      AND (o.BidderId = :BidderId OR :BidderId = -1)
      AND (o.DependencyId = :DependencyId OR :DependencyId = -1)
      AND (o.EndUserId = :EndUserId OR :EndUserId = -1)
      AND (o.OpportunityStatusId = :OpportunityStatusId OR :OpportunityStatusId = -1)
      AND (:DateTypeSearchId = 1 and :MinDate <= o.RegistrationDate and :MaxDate >= o.RegistrationDate
        OR :DateTypeSearchId = 2 and :MinDate <= o.Deadline and :MaxDate >= o.Deadline
        OR :DateTypeSearchId = 4 and :MinDate <= o.ClarificationDate and :MaxDate >= o.ClarificationDate
        OR :DateTypeSearchId = 5 and :MinDate <= o.PreRevisionDate and :MaxDate >= o.PreRevisionDate
        OR :DateTypeSearchId = -1)
    ]]>
  </sql-query>

</hibernate-mapping>