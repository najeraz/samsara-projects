<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.ProjectsAndTendering.Core" 
  namespace="Samsara.ProjectsAndTendering.Core.Entities.Domain">
  
  <class name="Warranty" table="Warranties">
    
    <id name="WarrantyId" type="int">
      <generator class="native"/>
    </id>

    <property name="Name"/>
    <property name="Description"/>
    <property name="Deleted"/>
    <property name="Activated"/>

    <many-to-one name="WarrantyType" lazy="false"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.WarrantyType, Samsara.ProjectsAndTendering.Core"
                 column="WarrantyTypeId"/>
    <many-to-one name="DocumentTypeWarranty" lazy="false"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.DocumentTypeWarranty, Samsara.ProjectsAndTendering.Core"
                 column="DocumentTypeWarrantyId"/>

  </class>

  <query name="Warranty.GetListByParameters">
    <![CDATA[
        from Warranty where Deleted = 0 and Activated = 1
    ]]>
  </query>
  
  <sql-query name="Warranty.SearchByParameters" cacheable="false" read-only="true">
    <return-scalar column="WarrantyId" type="int"/>
    <return-scalar column="Name" type="string"/>
    <return-scalar column="WarrantyTypeName" type="string"/>
    <return-scalar column="DocumentTypeWarrantyName" type="string"/>
    <![CDATA[
        SELECT w.WarrantyId, w.Name, wt.Name WarrantyTypeName, dtw.Name DocumentTypeWarrantyName
        FROM Warranties w
        INNER JOIN WarrantyTypes wt ON wt.WarrantyTypeId = w.WarrantyTypeId
        INNER JOIN DocumentTypeWarranties dtw ON dtw.DocumentTypeWarrantyId = w.DocumentTypeWarrantyId
        WHERE w.Deleted = 0 AND w.Activated = 1
        AND wt.Deleted = 0 AND wt.Activated = 1
        AND dtw.Deleted = 0 AND dtw.Activated = 1
        AND w.Name like :Name
    ]]>
  </sql-query>
  
</hibernate-mapping>