<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.ProjectsAndTendering.Core" 
  namespace="Samsara.ProjectsAndTendering.Core.Entities.Domain">
  
  <class name="TenderFile" table="TenderFiles">
    
    <id name="TenderFileId" type="int">
      <generator class="native"/>
    </id>
    
    <property name="File" column="[File]"/>
    <property name="Filename"/>
    <property name="Description"/>
    <property name="FileSize" access="readonly"/>

    <many-to-one name="Tender"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Tender, Samsara.ProjectsAndTendering.Core"
                 column="TenderId"/>
    
  </class>

  <query name="TenderFile.GetListByParameters">
    <![CDATA[
        from TenderFile
    ]]>
  </query>

  <sql-query name="TenderFile.SearchByParameters" cacheable="false" read-only="true">
    <!--<return
      class="Samsara.ProjectsAndTendering.Core.Entities.Domain.TenderFile, Samsara.ProjectsAndTendering.Core">-->
    <return-scalar column="TenderFileId" type="int"/>
    <return-scalar column="TenderId" type="int"/>
    <return-scalar column="Filename" type="string"/>
    <return-scalar column="FileSize" type="decimal"/>
    <return-scalar column="Description" type="string"/>
      <!--<return-property name="TenderFileId" column="TenderFileId"/>
      <return-property name="TenderId" column="TenderId"/>
      <return-property name="Filename" column="Filename"/>
      <return-property name="Description" column="Description"/>
    </return>-->
    <![CDATA[
      SELECT  TenderFileId, TenderId, Filename, Description, FileSize / (1024 * 1024) FileSize
      FROM TenderFiles
      WHERE TenderId = :TenderId
    ]]>
  </sql-query>

</hibernate-mapping>