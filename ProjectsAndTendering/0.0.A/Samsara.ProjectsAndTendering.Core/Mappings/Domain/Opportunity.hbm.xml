<?xml version="1.0" encoding="utf-8" ?>
<hibernate-mapping xmlns="urn:nhibernate-mapping-2.2" 
  assembly="Samsara.ProjectsAndTendering.Core" 
  namespace="Samsara.ProjectsAndTendering.Core.Entities.Domain">
  
  <class name="Opportunity" table="Opportunities">
    
    <id name="OpportunityId" type="int">
      <generator class="native"/>
    </id>
    
    <property name="AcquisitionReason"/>
    <property name="RegistrationDate"/>
    <property name="Name"/>
    <property name="ClarificationDate"/>
    <property name="PreRevisionDate"/>
    <property name="Deadline"/>
    <property name="Deleted"/>
    <property name="Activated"/>
    
    <many-to-one name="Organization"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Organization, Samsara.ProjectsAndTendering.Core"
                 column="OrganizationId"/>
    <many-to-one name="Asesor"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.Asesor, Samsara.ProjectsAndTendering.Core"
                 column="AsesorId"/>
    <many-to-one name="OpportunityStatus"
                 class="Samsara.ProjectsAndTendering.Core.Entities.Domain.OpportunityStatus, Samsara.ProjectsAndTendering.Core"
                 column="OpportunityStatusId"/>
  </class>

  <query name="Opportunity.GetListByParameters">
    <![CDATA[
        from Opportunity where Deleted = 0 and Activated = 1
    ]]>
  </query>

  <sql-query name="Opportunity.SearchByParameters" cacheable="false" read-only="true">
    <return-scalar column="OpportunityId" type="int"/>
    <return-scalar column="RegistrationDate" type="DateTime"/>
    <return-scalar column="OrganizationName" type="string"/>
    <return-scalar column="OpportunityName" type="string"/>
    <return-scalar column="AsesorName" type="string"/>
    <return-scalar column="PreRevisionDate" type="DateTime"/>
    <return-scalar column="Deadline" type="DateTime"/>
    <return-scalar column="OpportunityStatusName" type="string"/>
    <![CDATA[
      SELECT t.OpportunityId, t.RegistrationDate, o.Name OrganizationName, t.Name OpportunityName,
      a.Name AsesorName, t.PreRevisionDate, t.Deadline, ts.Name OpportunityStatusName
      FROM Opportunities t
      INNER JOIN Organizations o	  	  ON o.OrganizationId = t.OrganizationId AND o.Deleted = 0 and o.Activated = 1
      LEFT JOIN	Asesors a		    	      ON a.AsesorId = t.AsesorId AND a.Deleted = 0 and a.Activated = 1
      LEFT JOIN	OpportunityStatuses ts	ON ts.OpportunityStatusId = t.OpportunityStatusId AND ts.Deleted = 0 and ts.Activated = 1
      WHERE t.Deleted = 0 and t.Activated = 1
      AND t.Name like :OpportunityName
      AND (t.AsesorId = :AsesorId OR :AsesorId = -1)
      AND (t.OrganizationId = :OrganizationId OR :OrganizationId = -1)
      AND (t.OpportunityStatusId = :OpportunityStatusId OR :OpportunityStatusId = -1)
      AND (:DateTypeSearchId = 1 and :MinDate <= t.RegistrationDate and :MaxDate >= t.RegistrationDate
        OR :DateTypeSearchId = 2 and :MinDate <= t.Deadline and :MaxDate >= t.Deadline
        OR :DateTypeSearchId = 4 and :MinDate <= t.ClarificationDate and :MaxDate >= t.ClarificationDate
        OR :DateTypeSearchId = 5 and :MinDate <= t.PreRevisionDate and :MaxDate >= t.PreRevisionDate
        OR :DateTypeSearchId = -1)
    ]]>
  </sql-query>

</hibernate-mapping>